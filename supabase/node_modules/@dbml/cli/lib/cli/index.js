"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dbml2sql = dbml2sql;
exports.sql2dbml = sql2dbml;
var _commander = _interopRequireDefault(require("commander"));
var _import = _interopRequireDefault(require("./import"));
var _export = _interopRequireDefault(require("./export"));
var _package = _interopRequireDefault(require("../../package.json"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function dbml2sql(args) {
  _commander.default.version(_package.default.version);
  _commander.default.usage('[options] <files...>').option('--mysql').option('--postgres').option('--mssql').option('-o, --out-file <pathspec>', 'compile all input files into a single files');
  // .option('-d, --out-dir <pathspec>', 'compile an input directory of dbml files into an output directory');

  _commander.default.parse(args);
  (0, _export.default)(_commander.default);
}
function sql2dbml(args) {
  _commander.default.version(_package.default.version);
  _commander.default.usage('[options] <files...>').option('--mysql').option('--postgres').option('--postgres-legacy').option('--mssql').option('-o, --out-file <pathspec>', 'compile all input files into a single files');
  // .option('-d, --out-dir <pathspec>', 'compile an input directory of sql files into an output directory');

  _commander.default.parse(args);
  (0, _import.default)(_commander.default);
}